{"version":3,"sources":["Ribbon/Ribbon.module.css","Footer/Footer.module.css","Banner/Banner.module.css","Display/Display.tsx","Form/Form.tsx","Conversion/Conversion.tsx","Banner/Banner.tsx","Ribbon/Ribbon.tsx","Footer/Footer.tsx","History/History.tsx","Root/Root.tsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Display","props","state","Container","fluid","Row","className","Col","xs","lg","Form","Group","controlId","InputGroup","Prepend","Text","Control","as","title","readOnly","value","this","conAmount","React","Component","AppForm","formRefs","formstate","baseCur","targetCur","amount","baseRef","targetRef","intButtonRef","conButtonRef","inputRef","handleChange","bind","handleSubmit","handleClick","handleBlur","event","target","id","setState","process","preventDefault","includes","concat","onSubmit","placeholder","onBlur","defaultValue","ref","e","Label","column","onChange","Button","style","paddingTop","paddingBottom","borderRadius","variant","onClick","md","type","Conversion","callback","query","encodeURIComponent","url","get","res","body","on","data","val","JSON","parse","total","Math","round","parseFloat","toString","err","Error","console","log","Banner","styles","Carousel","Item","Image","src","Ribbon","sm","Ribbontext","Ribbonlogo","Footer","FootertextDesignby","FootertextName","href","History","Table","striped","bordered","hover","histcur","map","item","index","base","Root","roostate","histCur","Card","margin","Body","Title","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44a5e23b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ribbon\":\"Ribbon_Ribbon__4xXZI\",\"Ribbontext\":\"Ribbon_Ribbontext__3JAgl\",\"Ribbonlogo\":\"Ribbon_Ribbonlogo__3Tfph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__3H9AX\",\"FootertextDesignby\":\"Footer_FootertextDesignby__Nc_zp\",\"FootertextName\":\"Footer_FootertextName__1p0qT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Banner\":\"Banner_Banner__2jwyF\"};","import React from 'react';\r\n//import styles from './Display.module.css';\r\nimport { Container, Row, Col, Form, InputGroup } from 'react-bootstrap';\r\n\r\nclass Display extends React.Component<{conAmount: string}, {}> {\r\n  constructor(props: any | Readonly<{}>) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center pt-4 pb-5\">\r\n          <Col xs=\"12\" lg=\"10\">\r\n            <Form.Group controlId=\"Form.Display\">\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>\r\n                    Target Amount\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control as=\"input\" title=\"Desired Amount\" readOnly className=\"text-right\" value={this.props.conAmount}></Form.Control>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React from 'react';\r\n//import styles from './Form.module.css';\r\nimport { Form, InputGroup, Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\ntype FormState = {\r\n  baseCur: string,\r\n  targetCur: string,\r\n  amount: string\r\n}\r\n\r\nclass AppForm extends React.Component<{process: any, state: any}, {formstate: FormState}> {\r\n  formRefs!: {\r\n    baseRef: any;\r\n    targetRef: any;\r\n    intButtonRef: any;\r\n    conButtonRef: any;\r\n    inputRef: any;\r\n  };\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      formstate: {\r\n        baseCur: this.props.state.baseCur,\r\n        targetCur: this.props.state.targetCur,\r\n        amount: this.props.state.amount\r\n      }\r\n    };\r\n\r\n    this.formRefs = {\r\n      baseRef: null,\r\n      targetRef: null,\r\n      intButtonRef: null,\r\n      conButtonRef: null,\r\n      inputRef: null\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  handleChange(event: { target: { id: string, value: string } }) {\r\n    if (event.target.id === 'Form.ControlSelect1') {\r\n      this.setState({\r\n        formstate: {\r\n          baseCur: event.target.value,\r\n          targetCur: this.state.formstate.targetCur,\r\n          amount: this.state.formstate.amount\r\n        }\r\n      }, () => {\r\n        this.props.process(this.state.formstate);\r\n      });\r\n    } else if (event.target.id === 'Form.ControlSelect2') {\r\n      this.setState({\r\n        formstate: {\r\n          baseCur: this.state.formstate.baseCur,\r\n          targetCur: event.target.value,\r\n          amount: this.state.formstate.amount\r\n        }\r\n      }, () => {\r\n        this.props.process(this.state.formstate);\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(event: { preventDefault: () => void }) {\r\n    this.props.process(this.state.formstate);\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      formstate: {\r\n        baseCur: this.state.formstate.targetCur,\r\n        targetCur: this.state.formstate.baseCur,\r\n        amount: this.state.formstate.amount\r\n      }\r\n    }, () => {\r\n      [this.formRefs.baseRef.value, this.formRefs.targetRef.value] = \r\n      [this.formRefs.targetRef.value, this.formRefs.baseRef.value];\r\n      this.props.process(this.state.formstate);\r\n    });\r\n  }\r\n\r\n  handleBlur(event: { target: { id: string, value: string } }) {\r\n    this.formRefs.inputRef.value = this.formRefs.inputRef.value.includes('.')?\r\n    this.formRefs.inputRef.value : this.formRefs.inputRef.value.concat('.0000');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"text-center\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n        <Row className=\"justify-content-center mb-3\">\r\n          <Col xs=\"12\" lg=\"10\">\r\n            <Form.Group controlId=\"Form.Input\">\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>\r\n                    Base Amount\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control title=\"Enter Amount\" as=\"input\" placeholder=\"Enter amount\" \r\n                onBlur={this.handleBlur} defaultValue={this.props.state.amount} \r\n                className=\"text-right\" ref={(e: any) => this.formRefs.inputRef = e}>\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center mb-3\">\r\n          <Col xs=\"12\" lg=\"4\">\r\n            <Form.Group as={Row} controlId=\"Form.ControlSelect1\">\r\n              <Form.Label column lg=\"12\" xs=\"4\">Base Cur.</Form.Label>\r\n              <Col lg=\"12\" xs=\"8\">\r\n                <Form.Control title=\"Select Base Currency\" as=\"select\" \r\n                onChange={this.handleChange} defaultValue={this.props.state.baseCur} \r\n                ref={(e: any) => this.formRefs.baseRef = e}>\r\n                <option value=\"AED\">AED - United Arab Emirates Dirham</option>\r\n                <option value=\"AFN\">AFN - Afghan Afghani</option>\r\n                <option value=\"ALL\">ALL - Albanian Lek</option>\r\n                <option value=\"AMD\">AMD - Armenian Dram</option>\r\n                <option value=\"ANG\">ANG - Netherlands Antillean Guilder</option>\r\n                <option value=\"AOA\">AOA - Angolan Kwanza</option>\r\n                <option value=\"ARS\">ARS - Argentine Peso</option>\r\n                <option value=\"AUD\">AUD - Australian Dollar</option>\r\n                <option value=\"AWG\">AWG - Aruban Florin</option>\r\n                <option value=\"AZN\">AZN - Azerbaijani Manat</option>\r\n                <option value=\"BAM\">BAM - Bosnia-Herzegovina Convertible Mark</option>\r\n                <option value=\"BBD\">BBD - Barbadian Dollar</option>\r\n                <option value=\"BDT\">BDT - Bangladeshi Taka</option>\r\n                <option value=\"BGN\">BGN - Bulgarian Lev</option>\r\n                <option value=\"BHD\">BHD - Bahraini Dinar</option>\r\n                <option value=\"BIF\">BIF - Burundian Franc</option>\r\n                <option value=\"BMD\">BMD - Bermudan Dollar</option>\r\n                <option value=\"BND\">BND - Brunei Dollar</option>\r\n                <option value=\"BOB\">BOB - Bolivian Boliviano</option>\r\n                <option value=\"BRL\">BRL - Brazilian Real</option>\r\n                <option value=\"BSD\">BSD - Bahamian Dollar</option>\r\n                <option value=\"BTC\">BTC - Bitcoin</option>\r\n                <option value=\"BTN\">BTN - Bhutanese Ngultrum</option>\r\n                <option value=\"BWP\">BWP - Botswanan Pula</option>\r\n                <option value=\"BYR\">BYR - Belarusian Ruble</option>\r\n                <option value=\"BYN\">BYN - New Belarusian Ruble</option>\r\n                <option value=\"BZD\">BZD - Belize Dollar</option>\r\n                <option value=\"CAD\">CAD - Canadian Dollar</option>\r\n                <option value=\"CDF\">CDF - Congolese Franc</option>\r\n                <option value=\"CHF\">CHF - Swiss Franc</option>\r\n                <option value=\"CLF\">CLF - Chilean Unit of Account (UF)</option>\r\n                <option value=\"CLP\">CLP - Chilean Peso</option>\r\n                <option value=\"CNY\">CNY - Chinese Yuan</option>\r\n                <option value=\"COP\">COP - Colombian Peso</option>\r\n                <option value=\"CRC\">CRC - Costa Rican Colón</option>\r\n                <option value=\"CUC\">CUC - Cuban Convertible Peso</option>\r\n                <option value=\"CUP\">CUP - Cuban Peso</option>\r\n                <option value=\"CVE\">CVE - Cape Verdean Escudo</option>\r\n                <option value=\"CZK\">CZK - Czech Republic Koruna</option>\r\n                <option value=\"DJF\">DJF - Djiboutian Franc</option>\r\n                <option value=\"DKK\">DKK - Danish Krone</option>\r\n                <option value=\"DOP\">DOP - Dominican Peso</option>\r\n                <option value=\"DZD\">DZD - Algerian Dinar</option>\r\n                <option value=\"EGP\">EGP - Egyptian Pound</option>\r\n                <option value=\"ERN\">ERN - Eritrean Nakfa</option>\r\n                <option value=\"ETB\">ETB - Ethiopian Birr</option>\r\n                <option value=\"EUR\">EUR - Euro</option>\r\n                <option value=\"FJD\">FJD - Fijian Dollar</option>\r\n                <option value=\"FKP\">FKP - Falkland Islands Pound</option>\r\n                <option value=\"GBP\">GBP - British Pound Sterling</option>\r\n                <option value=\"GEL\">GEL - Georgian Lari</option>\r\n                <option value=\"GGP\">GGP - Guernsey Pound</option>\r\n                <option value=\"GHS\">GHS - Ghanaian Cedi</option>\r\n                <option value=\"GIP\">GIP - Gibraltar Pound</option>\r\n                <option value=\"GMD\">GMD - Gambian Dalasi</option>\r\n                <option value=\"GNF\">GNF - Guinean Franc</option>\r\n                <option value=\"GTQ\">GTQ - Guatemalan Quetzal</option>\r\n                <option value=\"GYD\">GYD - Guyanaese Dollar</option>\r\n                <option value=\"HKD\">HKD - Hong Kong Dollar</option>\r\n                <option value=\"HNL\">HNL - Honduran Lempira</option>\r\n                <option value=\"HRK\">HRK - Croatian Kuna</option>\r\n                <option value=\"HTG\">HTG - Haitian Gourde</option>\r\n                <option value=\"HUF\">HUF - Hungarian Forint</option>\r\n                <option value=\"IDR\">IDR - Indonesian Rupiah</option>\r\n                <option value=\"ILS\">ILS - Israeli New Sheqel</option>\r\n                <option value=\"IMP\">IMP - Manx pound</option>\r\n                <option value=\"INR\">INR - Indian Rupee</option>\r\n                <option value=\"IQD\">IQD - Iraqi Dinar</option>\r\n                <option value=\"IRR\">IRR - Iranian Rial</option>\r\n                <option value=\"ISK\">ISK - Icelandic Króna</option>\r\n                <option value=\"JEP\">JEP - Jersey Pound</option>\r\n                <option value=\"JMD\">JMD - Jamaican Dollar</option>\r\n                <option value=\"JOD\">JOD - Jordanian Dinar</option>\r\n                <option value=\"JPY\">JPY - Japanese Yen</option>\r\n                <option value=\"KES\">KES - Kenyan Shilling</option>\r\n                <option value=\"KGS\">KGS - Kyrgystani Som</option>\r\n                <option value=\"KHR\">KHR - Cambodian Riel</option>\r\n                <option value=\"KMF\">KMF - Comorian Franc</option>\r\n                <option value=\"KPW\">KPW - North Korean Won</option>\r\n                <option value=\"KRW\">KRW - South Korean Won</option>\r\n                <option value=\"KWD\">KWD - Kuwaiti Dinar</option>\r\n                <option value=\"KYD\">KYD - Cayman Islands Dollar</option>\r\n                <option value=\"KZT\">KZT - Kazakhstani Tenge</option>\r\n                <option value=\"LAK\">LAK - Laotian Kip</option>\r\n                <option value=\"LBP\">LBP - Lebanese Pound</option>\r\n                <option value=\"LKR\">LKR - Sri Lankan Rupee</option>\r\n                <option value=\"LRD\">LRD - Liberian Dollar</option>\r\n                <option value=\"LSL\">LSL - Lesotho Loti</option>\r\n                <option value=\"LTL\">LTL - Lithuanian Litas</option>\r\n                <option value=\"LVL\">LVL - Latvian Lats</option>\r\n                <option value=\"LYD\">LYD - Libyan Dinar</option>\r\n                <option value=\"MAD\">MAD - Moroccan Dirham</option>\r\n                <option value=\"MDL\">MDL - Moldovan Leu</option>\r\n                <option value=\"MGA\">MGA - Malagasy Ariary</option>\r\n                <option value=\"MKD\">MKD - Macedonian Denar</option>\r\n                <option value=\"MMK\">MMK - Myanma Kyat</option>\r\n                <option value=\"MNT\">MNT - Mongolian Tugrik</option>\r\n                <option value=\"MOP\">MOP - Macanese Pataca</option>\r\n                <option value=\"MRO\">MRO - Mauritanian Ouguiya</option>\r\n                <option value=\"MUR\">MUR - Mauritian Rupee</option>\r\n                <option value=\"MVR\">MVR - Maldivian Rufiyaa</option>\r\n                <option value=\"MWK\">MWK - Malawian Kwacha</option>\r\n                <option value=\"MXN\">MXN - Mexican Peso</option>\r\n                <option value=\"MYR\">MYR - Malaysian Ringgit</option>\r\n                <option value=\"MZN\">MZN - Mozambican Metical</option>\r\n                <option value=\"NAD\">NAD - Namibian Dollar</option>\r\n                <option value=\"NGN\">NGN - Nigerian Naira</option>\r\n                <option value=\"NIO\">NIO - Nicaraguan Córdoba</option>\r\n                <option value=\"NOK\">NOK - Norwegian Krone</option>\r\n                <option value=\"NPR\">NPR - Nepalese Rupee</option>\r\n                <option value=\"NZD\">NZD - New Zealand Dollar</option>\r\n                <option value=\"OMR\">OMR - Omani Rial</option>\r\n                <option value=\"PAB\">PAB - Panamanian Balboa</option>\r\n                <option value=\"PEN\">PEN - Peruvian Nuevo Sol</option>\r\n                <option value=\"PGK\">PGK - Papua New Guinean Kina</option>\r\n                <option value=\"PHP\">PHP - Philippine Peso</option>\r\n                <option value=\"PKR\">PKR - Pakistani Rupee</option>\r\n                <option value=\"PLN\">PLN - Polish Zloty</option>\r\n                <option value=\"PYG\">PYG - Paraguayan Guarani</option>\r\n                <option value=\"QAR\">QAR - Qatari Rial</option>\r\n                <option value=\"RON\">RON - Romanian Leu</option>\r\n                <option value=\"RSD\">RSD - Serbian Dinar</option>\r\n                <option value=\"RUB\">RUB - Russian Ruble</option>\r\n                <option value=\"RWF\">RWF - Rwandan Franc</option>\r\n                <option value=\"SAR\">SAR - Saudi Riyal</option>\r\n                <option value=\"SBD\">SBD - Solomon Islands Dollar</option>\r\n                <option value=\"SCR\">SCR - Seychellois Rupee</option>\r\n                <option value=\"SDG\">SDG - Sudanese Pound</option>\r\n                <option value=\"SEK\">SEK - Swedish Krona</option>\r\n                <option value=\"SGD\">SGD - Singapore Dollar</option>\r\n                <option value=\"SHP\">SHP - Saint Helena Pound</option>\r\n                <option value=\"SLL\">SLL - Sierra Leonean Leone</option>\r\n                <option value=\"SOS\">SOS - Somali Shilling</option>\r\n                <option value=\"SRD\">SRD - Surinamese Dollar</option>\r\n                <option value=\"STD\">STD - São Tomé and Príncipe Dobra</option>\r\n                <option value=\"SVC\">SVC - Salvadoran Colón</option>\r\n                <option value=\"SYP\">SYP - Syrian Pound</option>\r\n                <option value=\"SZL\">SZL - Swazi Lilangeni</option>\r\n                <option value=\"THB\">THB - Thai Baht</option>\r\n                <option value=\"TJS\">TJS - Tajikistani Somoni</option>\r\n                <option value=\"TMT\">TMT - Turkmenistani Manat</option>\r\n                <option value=\"TND\">TND - Tunisian Dinar</option>\r\n                <option value=\"TOP\">TOP - Tongan Paʻanga</option>\r\n                <option value=\"TRY\">TRY - Turkish Lira</option>\r\n                <option value=\"TTD\">TTD - Trinidad and Tobago Dollar</option>\r\n                <option value=\"TWD\">TWD - New Taiwan Dollar</option>\r\n                <option value=\"TZS\">TZS - Tanzanian Shilling</option>\r\n                <option value=\"UAH\">UAH - Ukrainian Hryvnia</option>\r\n                <option value=\"UGX\">UGX - Ugandan Shilling</option>\r\n                <option value=\"USD\">USD - United States Dollar</option>\r\n                <option value=\"UYU\">UYU - Uruguayan Peso</option>\r\n                <option value=\"UZS\">UZS - Uzbekistan Som</option>\r\n                <option value=\"VEF\">VEF - Venezuelan Bolívar Fuerte</option>\r\n                <option value=\"VND\">VND - Vietnamese Dong</option>\r\n                <option value=\"VUV\">VUV - Vanuatu Vatu</option>\r\n                <option value=\"WST\">WST - Samoan Tala</option>\r\n                <option value=\"XAF\">XAF - CFA Franc BEAC</option>\r\n                <option value=\"XAG\">XAG - Silver (troy ounce)</option>\r\n                <option value=\"XAU\">XAU - Gold (troy ounce)</option>\r\n                <option value=\"XCD\">XCD - East Caribbean Dollar</option>\r\n                <option value=\"XDR\">XDR - Special Drawing Rights</option>\r\n                <option value=\"XOF\">XOF - CFA Franc BCEAO</option>\r\n                <option value=\"XPF\">XPF - CFP Franc</option>\r\n                <option value=\"YER\">YER - Yemeni Rial</option>\r\n                <option value=\"ZAR\">ZAR - South African Rand</option>\r\n                <option value=\"ZMK\">ZMK - Zambian Kwacha (pre-2013)</option>\r\n                <option value=\"ZMW\">ZMW - Zambian Kwacha</option>\r\n                <option value=\"ZWL\">ZWL - Zimbabwean Dollar</option>\r\n              </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col xs=\"12\" lg=\"2\" className=\"d-flex align-items-center justify-content-center\">\r\n            <Button className=\"mb-2 mt-n2\" style={{paddingTop: '0.45em', \r\n            paddingBottom: '0.45em', borderRadius: '50%'}} variant=\"primary\" \r\n            title=\"Interchange\" onClick={this.handleClick} \r\n            ref={(e: any) => this.formRefs.intButtonRef = e}>\r\n              <i className=\"fa fa-sync-alt\"></i>\r\n            </Button>\r\n          </Col>\r\n          <Col xs=\"12\" lg=\"4\">\r\n            <Form.Group as={Row} controlId=\"Form.ControlSelect2\">\r\n              <Form.Label column lg=\"12\" xs=\"4\">Target Cur.</Form.Label>\r\n              <Col lg=\"12\" xs=\"8\">\r\n                <Form.Control title=\"Select Target Currency\" as=\"select\" \r\n                onChange={this.handleChange} defaultValue={this.props.state.targetCur} \r\n                ref={(e: any) => this.formRefs.targetRef = e}>\r\n                  <option value=\"AED\">AED - United Arab Emirates Dirham</option>\r\n                  <option value=\"AFN\">AFN - Afghan Afghani</option>\r\n                  <option value=\"ALL\">ALL - Albanian Lek</option>\r\n                  <option value=\"AMD\">AMD - Armenian Dram</option>\r\n                  <option value=\"ANG\">ANG - Netherlands Antillean Guilder</option>\r\n                  <option value=\"AOA\">AOA - Angolan Kwanza</option>\r\n                  <option value=\"ARS\">ARS - Argentine Peso</option>\r\n                  <option value=\"AUD\">AUD - Australian Dollar</option>\r\n                  <option value=\"AWG\">AWG - Aruban Florin</option>\r\n                  <option value=\"AZN\">AZN - Azerbaijani Manat</option>\r\n                  <option value=\"BAM\">BAM - Bosnia-Herzegovina Convertible Mark</option>\r\n                  <option value=\"BBD\">BBD - Barbadian Dollar</option>\r\n                  <option value=\"BDT\">BDT - Bangladeshi Taka</option>\r\n                  <option value=\"BGN\">BGN - Bulgarian Lev</option>\r\n                  <option value=\"BHD\">BHD - Bahraini Dinar</option>\r\n                  <option value=\"BIF\">BIF - Burundian Franc</option>\r\n                  <option value=\"BMD\">BMD - Bermudan Dollar</option>\r\n                  <option value=\"BND\">BND - Brunei Dollar</option>\r\n                  <option value=\"BOB\">BOB - Bolivian Boliviano</option>\r\n                  <option value=\"BRL\">BRL - Brazilian Real</option>\r\n                  <option value=\"BSD\">BSD - Bahamian Dollar</option>\r\n                  <option value=\"BTC\">BTC - Bitcoin</option>\r\n                  <option value=\"BTN\">BTN - Bhutanese Ngultrum</option>\r\n                  <option value=\"BWP\">BWP - Botswanan Pula</option>\r\n                  <option value=\"BYR\">BYR - Belarusian Ruble</option>\r\n                  <option value=\"BYN\">BYN - New Belarusian Ruble</option>\r\n                  <option value=\"BZD\">BZD - Belize Dollar</option>\r\n                  <option value=\"CAD\">CAD - Canadian Dollar</option>\r\n                  <option value=\"CDF\">CDF - Congolese Franc</option>\r\n                  <option value=\"CHF\">CHF - Swiss Franc</option>\r\n                  <option value=\"CLF\">CLF - Chilean Unit of Account (UF)</option>\r\n                  <option value=\"CLP\">CLP - Chilean Peso</option>\r\n                  <option value=\"CNY\">CNY - Chinese Yuan</option>\r\n                  <option value=\"COP\">COP - Colombian Peso</option>\r\n                  <option value=\"CRC\">CRC - Costa Rican Colón</option>\r\n                  <option value=\"CUC\">CUC - Cuban Convertible Peso</option>\r\n                  <option value=\"CUP\">CUP - Cuban Peso</option>\r\n                  <option value=\"CVE\">CVE - Cape Verdean Escudo</option>\r\n                  <option value=\"CZK\">CZK - Czech Republic Koruna</option>\r\n                  <option value=\"DJF\">DJF - Djiboutian Franc</option>\r\n                  <option value=\"DKK\">DKK - Danish Krone</option>\r\n                  <option value=\"DOP\">DOP - Dominican Peso</option>\r\n                  <option value=\"DZD\">DZD - Algerian Dinar</option>\r\n                  <option value=\"EGP\">EGP - Egyptian Pound</option>\r\n                  <option value=\"ERN\">ERN - Eritrean Nakfa</option>\r\n                  <option value=\"ETB\">ETB - Ethiopian Birr</option>\r\n                  <option value=\"EUR\">EUR - Euro</option>\r\n                  <option value=\"FJD\">FJD - Fijian Dollar</option>\r\n                  <option value=\"FKP\">FKP - Falkland Islands Pound</option>\r\n                  <option value=\"GBP\">GBP - British Pound Sterling</option>\r\n                  <option value=\"GEL\">GEL - Georgian Lari</option>\r\n                  <option value=\"GGP\">GGP - Guernsey Pound</option>\r\n                  <option value=\"GHS\">GHS - Ghanaian Cedi</option>\r\n                  <option value=\"GIP\">GIP - Gibraltar Pound</option>\r\n                  <option value=\"GMD\">GMD - Gambian Dalasi</option>\r\n                  <option value=\"GNF\">GNF - Guinean Franc</option>\r\n                  <option value=\"GTQ\">GTQ - Guatemalan Quetzal</option>\r\n                  <option value=\"GYD\">GYD - Guyanaese Dollar</option>\r\n                  <option value=\"HKD\">HKD - Hong Kong Dollar</option>\r\n                  <option value=\"HNL\">HNL - Honduran Lempira</option>\r\n                  <option value=\"HRK\">HRK - Croatian Kuna</option>\r\n                  <option value=\"HTG\">HTG - Haitian Gourde</option>\r\n                  <option value=\"HUF\">HUF - Hungarian Forint</option>\r\n                  <option value=\"IDR\">IDR - Indonesian Rupiah</option>\r\n                  <option value=\"ILS\">ILS - Israeli New Sheqel</option>\r\n                  <option value=\"IMP\">IMP - Manx pound</option>\r\n                  <option value=\"INR\">INR - Indian Rupee</option>\r\n                  <option value=\"IQD\">IQD - Iraqi Dinar</option>\r\n                  <option value=\"IRR\">IRR - Iranian Rial</option>\r\n                  <option value=\"ISK\">ISK - Icelandic Króna</option>\r\n                  <option value=\"JEP\">JEP - Jersey Pound</option>\r\n                  <option value=\"JMD\">JMD - Jamaican Dollar</option>\r\n                  <option value=\"JOD\">JOD - Jordanian Dinar</option>\r\n                  <option value=\"JPY\">JPY - Japanese Yen</option>\r\n                  <option value=\"KES\">KES - Kenyan Shilling</option>\r\n                  <option value=\"KGS\">KGS - Kyrgystani Som</option>\r\n                  <option value=\"KHR\">KHR - Cambodian Riel</option>\r\n                  <option value=\"KMF\">KMF - Comorian Franc</option>\r\n                  <option value=\"KPW\">KPW - North Korean Won</option>\r\n                  <option value=\"KRW\">KRW - South Korean Won</option>\r\n                  <option value=\"KWD\">KWD - Kuwaiti Dinar</option>\r\n                  <option value=\"KYD\">KYD - Cayman Islands Dollar</option>\r\n                  <option value=\"KZT\">KZT - Kazakhstani Tenge</option>\r\n                  <option value=\"LAK\">LAK - Laotian Kip</option>\r\n                  <option value=\"LBP\">LBP - Lebanese Pound</option>\r\n                  <option value=\"LKR\">LKR - Sri Lankan Rupee</option>\r\n                  <option value=\"LRD\">LRD - Liberian Dollar</option>\r\n                  <option value=\"LSL\">LSL - Lesotho Loti</option>\r\n                  <option value=\"LTL\">LTL - Lithuanian Litas</option>\r\n                  <option value=\"LVL\">LVL - Latvian Lats</option>\r\n                  <option value=\"LYD\">LYD - Libyan Dinar</option>\r\n                  <option value=\"MAD\">MAD - Moroccan Dirham</option>\r\n                  <option value=\"MDL\">MDL - Moldovan Leu</option>\r\n                  <option value=\"MGA\">MGA - Malagasy Ariary</option>\r\n                  <option value=\"MKD\">MKD - Macedonian Denar</option>\r\n                  <option value=\"MMK\">MMK - Myanma Kyat</option>\r\n                  <option value=\"MNT\">MNT - Mongolian Tugrik</option>\r\n                  <option value=\"MOP\">MOP - Macanese Pataca</option>\r\n                  <option value=\"MRO\">MRO - Mauritanian Ouguiya</option>\r\n                  <option value=\"MUR\">MUR - Mauritian Rupee</option>\r\n                  <option value=\"MVR\">MVR - Maldivian Rufiyaa</option>\r\n                  <option value=\"MWK\">MWK - Malawian Kwacha</option>\r\n                  <option value=\"MXN\">MXN - Mexican Peso</option>\r\n                  <option value=\"MYR\">MYR - Malaysian Ringgit</option>\r\n                  <option value=\"MZN\">MZN - Mozambican Metical</option>\r\n                  <option value=\"NAD\">NAD - Namibian Dollar</option>\r\n                  <option value=\"NGN\">NGN - Nigerian Naira</option>\r\n                  <option value=\"NIO\">NIO - Nicaraguan Córdoba</option>\r\n                  <option value=\"NOK\">NOK - Norwegian Krone</option>\r\n                  <option value=\"NPR\">NPR - Nepalese Rupee</option>\r\n                  <option value=\"NZD\">NZD - New Zealand Dollar</option>\r\n                  <option value=\"OMR\">OMR - Omani Rial</option>\r\n                  <option value=\"PAB\">PAB - Panamanian Balboa</option>\r\n                  <option value=\"PEN\">PEN - Peruvian Nuevo Sol</option>\r\n                  <option value=\"PGK\">PGK - Papua New Guinean Kina</option>\r\n                  <option value=\"PHP\">PHP - Philippine Peso</option>\r\n                  <option value=\"PKR\">PKR - Pakistani Rupee</option>\r\n                  <option value=\"PLN\">PLN - Polish Zloty</option>\r\n                  <option value=\"PYG\">PYG - Paraguayan Guarani</option>\r\n                  <option value=\"QAR\">QAR - Qatari Rial</option>\r\n                  <option value=\"RON\">RON - Romanian Leu</option>\r\n                  <option value=\"RSD\">RSD - Serbian Dinar</option>\r\n                  <option value=\"RUB\">RUB - Russian Ruble</option>\r\n                  <option value=\"RWF\">RWF - Rwandan Franc</option>\r\n                  <option value=\"SAR\">SAR - Saudi Riyal</option>\r\n                  <option value=\"SBD\">SBD - Solomon Islands Dollar</option>\r\n                  <option value=\"SCR\">SCR - Seychellois Rupee</option>\r\n                  <option value=\"SDG\">SDG - Sudanese Pound</option>\r\n                  <option value=\"SEK\">SEK - Swedish Krona</option>\r\n                  <option value=\"SGD\">SGD - Singapore Dollar</option>\r\n                  <option value=\"SHP\">SHP - Saint Helena Pound</option>\r\n                  <option value=\"SLL\">SLL - Sierra Leonean Leone</option>\r\n                  <option value=\"SOS\">SOS - Somali Shilling</option>\r\n                  <option value=\"SRD\">SRD - Surinamese Dollar</option>\r\n                  <option value=\"STD\">STD - São Tomé and Príncipe Dobra</option>\r\n                  <option value=\"SVC\">SVC - Salvadoran Colón</option>\r\n                  <option value=\"SYP\">SYP - Syrian Pound</option>\r\n                  <option value=\"SZL\">SZL - Swazi Lilangeni</option>\r\n                  <option value=\"THB\">THB - Thai Baht</option>\r\n                  <option value=\"TJS\">TJS - Tajikistani Somoni</option>\r\n                  <option value=\"TMT\">TMT - Turkmenistani Manat</option>\r\n                  <option value=\"TND\">TND - Tunisian Dinar</option>\r\n                  <option value=\"TOP\">TOP - Tongan Paʻanga</option>\r\n                  <option value=\"TRY\">TRY - Turkish Lira</option>\r\n                  <option value=\"TTD\">TTD - Trinidad and Tobago Dollar</option>\r\n                  <option value=\"TWD\">TWD - New Taiwan Dollar</option>\r\n                  <option value=\"TZS\">TZS - Tanzanian Shilling</option>\r\n                  <option value=\"UAH\">UAH - Ukrainian Hryvnia</option>\r\n                  <option value=\"UGX\">UGX - Ugandan Shilling</option>\r\n                  <option value=\"USD\">USD - United States Dollar</option>\r\n                  <option value=\"UYU\">UYU - Uruguayan Peso</option>\r\n                  <option value=\"UZS\">UZS - Uzbekistan Som</option>\r\n                  <option value=\"VEF\">VEF - Venezuelan Bolívar Fuerte</option>\r\n                  <option value=\"VND\">VND - Vietnamese Dong</option>\r\n                  <option value=\"VUV\">VUV - Vanuatu Vatu</option>\r\n                  <option value=\"WST\">WST - Samoan Tala</option>\r\n                  <option value=\"XAF\">XAF - CFA Franc BEAC</option>\r\n                  <option value=\"XAG\">XAG - Silver (troy ounce)</option>\r\n                  <option value=\"XAU\">XAU - Gold (troy ounce)</option>\r\n                  <option value=\"XCD\">XCD - East Caribbean Dollar</option>\r\n                  <option value=\"XDR\">XDR - Special Drawing Rights</option>\r\n                  <option value=\"XOF\">XOF - CFA Franc BCEAO</option>\r\n                  <option value=\"XPF\">XPF - CFP Franc</option>\r\n                  <option value=\"YER\">YER - Yemeni Rial</option>\r\n                  <option value=\"ZAR\">ZAR - South African Rand</option>\r\n                  <option value=\"ZMK\">ZMK - Zambian Kwacha (pre-2013)</option>\r\n                  <option value=\"ZMW\">ZMW - Zambian Kwacha</option>\r\n                  <option value=\"ZWL\">ZWL - Zimbabwean Dollar</option>\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\">\r\n            <Button variant=\"primary\" type=\"submit\" title=\"Convert Now\"\r\n            ref={(e: any) => this.formRefs.conButtonRef = e}>\r\n              Get Conversion\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppForm;\r\n","import { get } from 'https'\r\n\r\nconst Conversion = (callback: (...args: any[]) => void, baseCur: string, targetCur: string, amount: string) => {\r\n  var AP_KEY = '187c342ff3c5f3d02ed2';\r\n\r\n  baseCur = encodeURIComponent(baseCur);\r\n  targetCur = encodeURIComponent(targetCur);\r\n  var query = baseCur + '_' + targetCur;\r\n\r\n  var url = 'https://free.currconv.com/api/v7/convert?q=' + query + '&compact=ultra&apiKey=' + AP_KEY;\r\n\r\n  get(url, res => {\r\n    var body = '';\r\n\r\n    res.on('data', data => {\r\n      body += data;\r\n    });\r\n    \r\n    res.on('end', () => {\r\n      try {\r\n        var jsonObj = JSON.parse(body);\r\n        var val = jsonObj[query];\r\n        \r\n        if (val) {\r\n          var total = (Math.round(val * parseFloat(amount) * 10000) / 10000).toString();\r\n          var value = (Math.round(parseFloat(val) * 10000) / 10000).toString();\r\n\r\n          if (total.includes('.') && value.includes('.')) {\r\n            callback({amount: total, value: value});\r\n          } else if (value.includes('.')) {\r\n            callback({amount: total.concat('.0000'), value: value});\r\n          } else if (total.includes('.')) {\r\n            callback({amount: total, value: value.concat('.0000')});\r\n          } else {\r\n            callback({amount: total.concat('.0000'), value: value.concat('.0000')});\r\n          }\r\n        } else {\r\n          var err = new Error(\"Value not found for \" + query);\r\n          console.log(err);\r\n        }\r\n      } catch(e) {\r\n        console.log(\"Parse error: \", e);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport default Conversion;\r\n","import React from 'react';\r\nimport styles from './Banner.module.css';\r\nimport { Container, Row, Col, Image, Carousel } from 'react-bootstrap'\r\n\r\nconst Banner: React.FC = () => (\r\n  <div className={styles.Banner}>\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs=\"auto\" lg=\"8\" className=\"pt-3\">\r\n          <Carousel>\r\n            <Carousel.Item>\r\n              <Image src=\"banner1.jpg\" fluid />\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <Image src=\"banner2.jpg\" fluid />\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <Image src=\"banner3.jpg\" fluid />\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport styles from './Ribbon.module.css';\r\nimport { Container, Row, Col, Image } from 'react-bootstrap'\r\n\r\nconst Ribbon: React.FC = () => (\r\n  <div className={styles.Ribbon}>\r\n    <Container fluid>\r\n      <Row>\r\n        <Col xs=\"12\" sm=\"10\" lg=\"8\">\r\n          <div className={styles.Ribbontext}>\r\n            Currency Converter Applicaton\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"auto\" sm=\"2\" lg=\"4\">\r\n          <Image src=\"logo192.png\" className={styles.Ribbonlogo} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default Ribbon;\r\n","import React from 'react';\r\nimport styles from './Footer.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer: React.FC = () => (\r\n  <div className={styles.Footer}>\r\n    <Container fluid>\r\n      <Row>\r\n        <Col xs=\"6\" md=\"10\" lg=\"10\">\r\n          <div className={styles.FootertextDesignby}>\r\n            Design by:\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"6\" md=\"2\" lg=\"2\">\r\n          <div className={styles.FootertextName}>\r\n            <a href=\"https://rajarsi.ml/\">Rajarsi Saha</a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n//import styles from './History.module.css';\r\nimport { Container, Row, Col, Table } from 'react-bootstrap';\r\n\r\ntype HistCur = {\r\n  base: string,\r\n  target: string\r\n}\r\n\r\nclass History extends React.Component<{histcur: HistCur[]}, {}> {\r\n  constructor(props: any | Readonly<{}>) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center pt-4 pb-5\">\r\n          <Col xs=\"12\" lg=\"12\">\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Base Currency</th>\r\n                <th>Target Currency</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                this.props.histcur.map((item, index) => {\r\n                  if (item.base !== '' && item.target !== '') {\r\n                    return [\r\n                      <tr key={index.toString()}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.base}</td>\r\n                        <td>{item.target}</td>\r\n                      </tr>\r\n                    ];\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n              }\r\n            </tbody>\r\n          </Table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default History;\r\n","import React from 'react';\r\n//import styles from './Root.module.css';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport Display from '../Display/Display';\r\nimport AppForm from '../Form/Form';\r\nimport Conversion from '../Conversion/Conversion';\r\nimport Banner from '../Banner/Banner';\r\nimport Ribbon from '../Ribbon/Ribbon';\r\nimport Footer from '../Footer/Footer';\r\nimport History from '../History/History';\r\n\r\ntype rootState = {\r\n  baseCur: string,\r\n  targetCur: string,\r\n  amount: string,\r\n  conAmount: string,\r\n  histCur: {\r\n    base: string,\r\n    target: string\r\n  }[]\r\n}\r\n\r\nclass Root extends React.Component<{}, { roostate: rootState }> {\r\n  constructor(props: any | Readonly<{}>) {\r\n    super(props);\r\n    this.state = {\r\n      roostate: {\r\n        baseCur: 'AED',\r\n        targetCur: 'AED',\r\n        amount: '1.0000',\r\n        conAmount: '1.0000',\r\n        histCur: [{\r\n          base: '',\r\n          target: '',\r\n        }, {\r\n          base: '',\r\n          target: '',\r\n        }, {\r\n          base: '',\r\n          target: '',\r\n        }, {\r\n          base: '',\r\n          target: '',\r\n        }]\r\n      }\r\n    };\r\n\r\n    this.process = this.process.bind(this);\r\n  }\r\n\r\n  process(state: any) {\r\n    Conversion(({amount, value}) => {\r\n      this.setState({\r\n        roostate: {\r\n          baseCur: state.baseCur,\r\n          targetCur: state.targetCur,\r\n          amount: state.amount,\r\n          conAmount: amount,\r\n          histCur: [{\r\n            base: '1.0000 ' + state.baseCur,\r\n            target: value + ' ' + state.targetCur\r\n          }, {\r\n            base: this.state.roostate.histCur[0].base,\r\n            target: this.state.roostate.histCur[0].target\r\n          }, {\r\n            base: this.state.roostate.histCur[1].base,\r\n            target: this.state.roostate.histCur[1].target\r\n          }, {\r\n            base: this.state.roostate.histCur[2].base,\r\n            target: this.state.roostate.histCur[2].target\r\n          }]\r\n        }\r\n      });\r\n    }, state.baseCur, state.targetCur, state.amount);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Ribbon />\r\n        <Banner />\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs=\"12\" lg=\"8\">\r\n              <Card style={{margin: '1em auto'}}>\r\n                <Card.Body>\r\n                  <Card.Title style={{fontSize: '2rem'}}>Convert Your Currency Now</Card.Title>\r\n                    <hr />\r\n                    <Display conAmount={this.state.roostate.conAmount}/>\r\n                    <AppForm process={this.process} state={this.state.roostate}/>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs=\"12\" lg=\"8\">\r\n              <Card style={{margin: '1em auto'}}>\r\n                <Card.Body>\r\n                  <Card.Title style={{fontSize: '2rem', }}>Used Conversions</Card.Title>\r\n                    <hr />\r\n                    <History histcur={this.state.roostate.histCur} />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Root;\r\n","//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Root  from './Root/Root';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Root/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}